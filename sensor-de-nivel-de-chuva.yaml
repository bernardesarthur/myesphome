esphome:
  name: sensor-de-nivel-de-chuva
  friendly_name: Sensor de Nível de Chuva

esp8266:
  board: esp01_1m
  restore_from_flash: True
  early_pin_init: False

packages:
  remote_package:
    url: https://github.com/bernardesarthur/myesphome
    ref: main
    refresh: 300s
    files:
      - base.yaml

# Add after install on device
wifi:
  use_address: 192.168.212.223
  # Desabilita a re-conexão contínua à rede para economizar energia (somente se for a bateria)
  fast_connect: True
  # NONE or LIGHT or HIGH
  power_save_mode: HIGH

# Deep Sleep para economizar bateria (somente se for a bateria)
deep_sleep:
  run_duration: 5s  # Tempo que o ESP8266 ficará ligado
  sleep_duration: 60s  # Tempo de sono antes de ligar novamente

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    id: boia
    name: boia
    internal: False
    disabled_by_default: False
    publish_initial_state: True
    device_class: problem
    entity_category: diagnostic
    filters: 
      - delayed_on: 10ms
      - delayed_off: 10ms

  - platform: template
    name: Chuva Forte
    internal: False
    disabled_by_default: False
    lambda: |-
      if (id(intensidade_chuva).state == 3) {
        return true;  // Chuva forte detectada
      } else {
        return false;  // Chuva fraca ou nenhuma chuva
      }
    device_class: moisture

sensor:
# Somente se for a bateria e se for ESP8266
  - platform: adc
    pin: VCC
    name: Tensão da Bateria
    update_interval: 60s
    id: tensao_bateria
    internal: False
    disabled_by_default: False

  - platform: template
    name: Nível da Bateria
    id: nivel_bateria
    lambda: |-
      // Considera que a tensão da bateria vai de 3.0V (0%) até 4.2V (100%)
      float tensao = id(tensao_bateria).state * 3.3;
      return (tensao - 3.0) * 100.0 / (4.2 - 3.0);
    unit_of_measurement: "%"
    update_interval: 60s
    internal: False
    disabled_by_default: False

# Somente se for ESP8266 sem bateria
#  - platform: adc
#    pin: VCC
#    name: Tensão da Bateria
#    update_interval: 60s
#    id: tensao_entrada
#    internal: False
#    disabled_by_default: False

  - platform: adc
    pin: A0  # Defina o pino correto para o sensor
    name: Intensidade da Chuva
    id: intensidade_chuva
    internal: False
    disabled_by_default: False
    update_interval: 60s  # Atualiza a cada minuto
    filters:
      - lambda: |-
          if (x < 0.1) {
            return 0;  // Sem chuva
          } else if (x < 0.5) {
            return 1;  // Chuva fraca
          } else if (x < 0.8) {
            return 2;  // Chuva moderada
          } else {
            return 3;  // Chuva forte
          }

text_sensor:
  - platform: template
    name: "Condição da Chuva"
    id: condicao_da_chuva
    internal: false
    disabled_by_default: false
    lambda: |-
      if (id(intensidade_chuva).state == 0) {
        return "Sem Chuva";
      } else if (id(intensidade_chuva).state == 1) {
        return "Chuva Fraca";
      } else if (id(intensidade_chuva).state == 2) {
        return "Chuva Moderada";
      } else {
        return "Chuva Forte";
      }