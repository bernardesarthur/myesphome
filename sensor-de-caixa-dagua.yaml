esphome:
  name: sensor-de-caixa-dagua
  friendly_name: Sensor de Caixa Dagua

esp32:
  board: esp32dev
  framework:
    type: arduino

esp32_ble_tracker:
  scan_parameters:
    active: True

bluetooth_proxy:
  active: True

packages:
  remote_package:
    url: https://github.com/bernardesarthur/myesphome
    ref: main
    refresh: 300s
    files:
      - base.yaml

# Add after install on device
wifi:
  use_address: 192.168.212.223
  # Desabilita a re-conexão contínua à rede para economizar energia (somente se for a bateria)
  fast_connect: True
  # NONE or LIGHT or HIGH
  power_save_mode: HIGH

# Deep Sleep para economizar bateria (somente se for a bateria)
deep_sleep:
  run_duration: 5s  # Tempo que o ESP8266 ficará ligado
  sleep_duration: 60s  # Tempo de sono antes de ligar novamente

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO3
      mode: INPUT_PULLUP
      inverted: True
    id: boia
    name: boia
    internal: False
    disabled_by_default: False
    publish_initial_state: True
    device_class: problem
    entity_category: diagnostic
    filters: 
      - delayed_on: 10ms
      - delayed_off: 10ms

sensor:
  - platform: ultrasonic
    trigger_pin: GPIO17
    echo_pin: GPIO16
    internal: True
    disabled_by_default: False
    id: ultrassonico
    update_interval: 60s
    unit_of_measurement: "m"
    filters:
      - median:
          window_size: 5
          send_every: 1
          send_first_at: 1
    # Configurações opcionais do sensor de ultrassom
#    pulse_time: 20us
#    timeout: 1.0m

  - platform: template
    id: nivel
    name: Nível
    internal: False
    disabled_by_default: False
    lambda: return (0.94-id(ultrassonico).state);
    unit_of_measurement: "m"
    device_class: distance
    accuracy_decimals: 2
    update_interval: 60s

  - platform: template
    id: percentual_var
    name: Percentual
    internal: False
    disabled_by_default: False
    unit_of_measurement: "%"
    lambda: |-
      float valor = (id(nivel).state / 0.65) * 100;
      if (valor > 100) {
        return 100;
      } else if (valor < 0) {
        return 0;
      } else {
        return valor;
      }
    accuracy_decimals: 1
    update_interval: 60s
    device_class: moisture