esphome:
  name: esp32-monitoramento
  friendly_name: ESP32 Monitoramento

esp32:
  board: esp32dev
  flash_size: 4MB
  framework:
    type: esp-idf
    version: recommended

esp32_ble_tracker:
  scan_parameters:
    active: True

bluetooth_proxy:
  active: True

packages:
  remote_package:
    url: https://github.com/bernardesarthur/myesphome
    ref: main
    refresh: 300s
    files:
      - base.yaml

# Add after install on device
wifi:
  use_address: 192.168.212.223

# Configuração do display SSD1306
i2c:
  sda: GPIO21
  scl: GPIO19
  scan: true

interval:
  - interval: 1s
    then:
      - lambda: |-
          id(show_header) = !id(show_header);

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    address: 0x3C
    rotation: 0
    id: my_display
    lambda: |-
      if (id(rele_canal_1).state) {  // Checar se o Rele Canal 1 está ligado
        if (id(temp_sensor).state < 9.99) {
          if (id(rele_canal_2).state) {  // Verificar se o Rele Canal 2 está ligado
            if (id(show_header)) {
              it.printf(64, 9, id(header_font_bold), TextAlign::CENTER, "Heineken");
            } else {
              it.printf(64, 9, id(header_font_bold), TextAlign::CENTER, "        "); // Espaço em branco para piscar
            }
          } else {
            it.printf(64, 9, id(header_font_bold), TextAlign::CENTER, "Heineken");
          }
          it.printf(64, 32, id(temp_font_bold), TextAlign::CENTER, "%.2f°C", id(temp_sensor).state);  // Reposicionando a temperatura
          it.printf(64, 58, id(header_font_bold), TextAlign::CENTER, "%.2f L", id(valor_hx711).state);  // Exibindo a quantidade de litros com duas casas decimais
        } else {
          it.printf(64, 9, id(header_font_bold), TextAlign::CENTER, "Heineken");
          it.printf(64, 32, id(temp_font_bold), TextAlign::CENTER, "%.2f°C", id(temp_sensor).state);  // Reposicionando a temperatura
          it.printf(64, 58, id(header_font_bold), TextAlign::CENTER, "%.2f L", id(valor_hx711).state);  // Exibindo a quantidade de litros com duas casas decimais
        }
      } else {
        it.strftime(64, 32, id(temp_font_bold), TextAlign::CENTER, "%H:%M:%S", id(esptime).now());  // Exibir relógio no centro da tela
      }

globals:
  - id: show_header
    type: bool
    restore_value: no
    initial_value: "true"

font:
  - file: "fonts/arial_bold.ttf"
    id: header_font_bold
    size: 23
  - file: "fonts/arial_bold.ttf"
    id: temp_font_bold
    size: 30

one_wire:
   - platform: gpio
     pin: GPIO25

sensor:
  - platform: dallas_temp
    address: 0xfc00000086bbef28
    name: "Temp Sensor"
    id: temp_sensor
    update_interval: 10s
    accuracy_decimals: 2
    internal: False
    disabled_by_default: False

  - platform: hx711
    name: "Valor HX711"
    dout_pin: GPIO13
    clk_pin: GPIO12
    gain: 64
    update_interval: 10s
    accuracy_decimals: 1
    internal: False
    disabled_by_default: False
    filters:
      - calibrate_linear:
          - -11000 -> 0
          - 180000 -> 5.000
    unit_of_measurement: litros
    id: valor_hx711

# Configuração dos Relés CW-021
switch:
  - platform: gpio
    name: "Rele Canal 1"
    pin:
      number: GPIO15
      inverted: False    
    id: rele_canal_1
    internal: False
    disabled_by_default: False
    # RESTORE_DEFAULT_OFF or RESTORE_DEFAULT_ON or RESTORE_INVERTED_DEFAULT_OFF or RESTORE_INVERTED_DEFAULT_ON or ALWAYS_OFF or ALWAYS_ON or DISABLED
    restore_mode: RESTORE_DEFAULT_OFF
#    interlock: &interlock_group_1 [rele_canal_1, rele_canal_2]
#    interlock_wait_time: 0ms
#    on_turn_on:
#    - delay: 500ms
#    - switch.turn_off: rele_canal_1

  - platform: gpio
    name: "Rele Canal 2"
    pin:
      number: GPIO16
      inverted: False    
    id: rele_canal_2
    internal: False
    disabled_by_default: False
    # RESTORE_DEFAULT_OFF or RESTORE_DEFAULT_ON or RESTORE_INVERTED_DEFAULT_OFF or RESTORE_INVERTED_DEFAULT_ON or ALWAYS_OFF or ALWAYS_ON or DISABLED
    restore_mode: RESTORE_DEFAULT_OFF
#    interlock: *interlock_group_1
#    interlock_wait_time: 0ms
#    on_turn_on:
#    - delay: 500ms
#    - switch.turn_off: relay_canal_2

  - platform: template
    name: Todos
    id: todos
    internal: False
    disabled_by_default: False
    optimistic: False
    # RESTORE_DEFAULT_OFF or RESTORE_DEFAULT_ON or RESTORE_INVERTED_DEFAULT_OFF or RESTORE_INVERTED_DEFAULT_ON or ALWAYS_OFF or ALWAYS_ON or DISABLED
    restore_mode: DISABLED
    lambda: |-
      if (id(relay_canal_1).state || id(relay_canal_2).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action: 
      then:
        - switch.turn_on: relay_canal_1
        - switch.turn_on: relay_canal_2
    turn_off_action:
      then:
        - switch.turn_off: relay_canal_1
        - switch.turn_off: relay_canal_2