esphome:
  name: sonoff-mini
  friendly_name: Sonoff Mini

esp8266:
  board: esp01_1m
  restore_from_flash: True
  early_pin_init: False

packages:
  remote_package:
    url: https://github.com/bernardesarthur/myesphome
    ref: main
    refresh: 300s
    files:
      - base.yaml

#Add after install on device
wifi:
  use_address: 192.168.212.223

globals:
  - id: direction_previous
    type: bool
    restore_value: no
    initial_value: "false"

# Relés internos (não exportados para o Home Assistant)a
switch:
  - platform: gpio
    id: velocidade_baixa
    pin:
      number: GPIO16
      inverted: False
    internal: True
    # RESTORE_DEFAULT_OFF or RESTORE_DEFAULT_ON or RESTORE_INVERTED_DEFAULT_OFF or RESTORE_INVERTED_DEFAULT_ON or ALWAYS_OFF or ALWAYS_ON or DISABLED
    restore_mode: ALWAYS_OFF

  - platform: gpio
    id: velocidade_media
    pin:
      number: GPIO14
      inverted: False
    internal: True
    # RESTORE_DEFAULT_OFF or RESTORE_DEFAULT_ON or RESTORE_INVERTED_DEFAULT_OFF or RESTORE_INVERTED_DEFAULT_ON or ALWAYS_OFF or ALWAYS_ON or DISABLED
    restore_mode: ALWAYS_OFF

  - platform: gpio
    id: velocidade_alta
    pin:
      number: GPIO12
      inverted: False
    internal: True
    # RESTORE_DEFAULT_OFF or RESTORE_DEFAULT_ON or RESTORE_INVERTED_DEFAULT_OFF or RESTORE_INVERTED_DEFAULT_ON or ALWAYS_OFF or ALWAYS_ON or DISABLED
    restore_mode: ALWAYS_OFF

  - platform: gpio
    id: exaustor
    pin:
      number: GPIO13
      inverted: False
    internal: True
    # RESTORE_DEFAULT_OFF or RESTORE_DEFAULT_ON or RESTORE_INVERTED_DEFAULT_OFF or RESTORE_INVERTED_DEFAULT_ON or ALWAYS_OFF or ALWAYS_ON or DISABLED
    restore_mode: ALWAYS_OFF

  - platform: gpio
    id: led_indicador
    pin:
      number: GPIO5
      inverted: False
    internal: True
    # RESTORE_DEFAULT_OFF or RESTORE_DEFAULT_ON or RESTORE_INVERTED_DEFAULT_OFF or RESTORE_INVERTED_DEFAULT_ON or ALWAYS_OFF or ALWAYS_ON or DISABLED
#    restore_mode: DISABLED

select:
  - platform: template
    name: Modo do LED
    id: led_mode
    optimistic: True
    restore_value: True
    internal: False
    disabled_by_default: False
    options:
      - "Auto"
      - "Sempre Ligado"
      - "Sempre Desligado"
      - "Invertido"
    initial_option: "Auto"
    on_value: 
      then:
        - lambda: |-
            switch (i) {
              case 0:
                if (id(ventilador_teto).state) {
                  id(led_indicador).turn_on();
                } else {
                  id(led_indicador).turn_off();
                }
                break;
              case 1:
                id(led_indicador).turn_on();
                break;
              case 2:
                id(led_indicador).turn_off();
                break;
              default:
                if (id(ventilador_teto).state) {
                  id(led_indicador).turn_off();
                } else {
                  id(led_indicador).turn_on();
                }
                break;
            }

# Controle do ventilador como entidade única
fan:
  - platform: speed
    name: Ventilador de Teto
    id: ventilador_teto
    output: ventilador_speed
    direction_output: ventilador_direcao
    speed_count: 3

output:
  - platform: template
    id: ventilador_speed
    type: float
    write_action:
      - lambda: |-
          //controle da velocidade
          if (state == 0) {
            id(velocidade_baixa).turn_off();
            id(velocidade_media).turn_off();
            id(velocidade_alta).turn_off();
          } else if (state > 0 && state <= 0.34) {
            // liga em velocidade baixa
            id(velocidade_media).turn_off();
            id(velocidade_alta).turn_off();
            id(velocidade_baixa).turn_on();
          } else if (state > 0.34 && state <= 0.67) {
            //velocidade média
            id(velocidade_alta).turn_off();
            id(velocidade_baixa).turn_on();
            id(velocidade_media).turn_on();
          } else {
            //velocidade alta
            id(velocidade_media).turn_off();
            id(velocidade_baixa).turn_on();
            id(velocidade_alta).turn_on();
          };
          
          //controle do led
          if (id(led_mode).state == "Sempre Ligado") {
            id(led_indicador).turn_on();
          } else if (id(led_mode).state == "Sempre Desligado") {
            id(led_indicador).turn_off();
          } else if (id(led_mode).state == "Auto") {
            if (state > 0) {
              id(led_indicador).turn_on();
            } else {
              id(led_indicador).turn_off();
            }
          } else if (id(led_mode).state == "Invertido") {
            if (state > 0) {
              id(led_indicador).turn_off();
            } else {
              id(led_indicador).turn_on();
            }
          }

  - platform: template
    id: ventilador_direcao
    type: binary
    write_action:
      - lambda: |-
          if (state != id(direction_previous)) {
            id(direction_previous) = state;

            if (id(ventilador_teto).state) {
              auto call = id(ventilador_teto).turn_off();
              call.perform();
            }
          }

          if (state) {
            id(exaustor).turn_on();
          } else {
            id(exaustor).turn_off();
          }